# Service parameters
service = MicroBenchmark

# Service parameters (for migration)
lib.ContextJobApplication.services = MicroBenchmark


# Context parameters
#MAX_ASYNC_THREADS = 10000
#MAX_TRANSPORT_THREADS = 10000
#EVENTREQ_PAYLOAD = 1


# Experimental setup parameters
#kill_sleep_time = 2
WORKER_JOIN_WAIT_TIME = 5
ServiceConfig.MicroBenchmark.HEAD_INITIAL_WAIT_TIME = 10000000
#ServiceConfig.MicroBenchmark.USE_GLOBAL_EVENT_CREATE = 1
ServiceConfig.MicroBenchmark.USE_GLOBAL_EVENT_CREATE = 0

# Do computation or not?
# If COMPUTE_PRIMES == 0, it will not make any async events at all.
ServiceConfig.MicroBenchmark.COMPUTE_PRIMES = 1
#ServiceConfig.MicroBenchmark.COMPUTE_PRIMES = 0
#ServiceConfig.MicroBenchmark.EXIT_TIME = 30000000 

# Types = {
#    SWAP_ITERATIVE
#       If there are context {1, 2} and {3, 4},
#       swap(1,4); sleep(); swap(2,3); sleep(); swap(1,4); ...
#
#MIGRATION = 1
#MIGRATION_TYPE = SWAP_ITERATIVE
#MIGRATION_START_TIME = 10
#MIGRATION_END_TIME = 20
#MIGRATION_PERIOD = 1

# Types = {
#    SWAP_ONCE
#       If there are context {1, 2} and {3, 4},
#       swap(1,4); swap(2,3); at once.
#
#MIGRATION = 1
#MIGRATION_TYPE = SWAP_ONCE
#MIGRATION_START_TIME = 100000000 


# Artificial delay
HEAD_NODE_USLEEP = 0
ServiceConfig.MicroBenchmark.EVENT_WAIT_TIME = 0

# Logging parameters
#MACE_LOG_AUTO_ALL = 1
MACE_LOG_AUTO_SELECTORS = Accumulator
MACE_LOG_ACCUMULATOR = 1000
EVENT_LIFE_TIME = 1

# Additional configuration mappings will be added in following lines.

